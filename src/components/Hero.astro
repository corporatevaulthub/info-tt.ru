---
import { Icon } from 'astro-icon/components';
import { Image, getImage } from 'astro:assets';
import heroBackground from '../assets/hero.png';
import { getEntry } from 'astro:content';
const hero = await getEntry('hero', 'hero');
---

<div class="hero bg-center">
  <div class="container relative z-10 flex flex-col items-start justify-between gap-5 pb-[70px] pt-[90px] sm:pt-[133px] lg:flex-row lg:pb-[120px]">
    <div class="w-full max-w-[750px]">
      <h1 class="mb-4 text-4xl font-bold uppercase text-white lg:text-5xl">
        {hero.data.title}
      </h1>
      <p class="mb-8 font-semibold text-white lg:mb-12">
        {hero.data.text}
      </p>
      <a href="#callback" class="hover:text-whtie group inline-flex items-center gap-3 rounded bg-white px-4 py-3 font-bold text-dark transition-colors hover:bg-[#E53737] hover:text-white"
        >Получить консультацию
        <span class="grid size-[30px] place-content-center place-items-center rounded-full bg-[#E53737] transition-colors group-hover:bg-white">
          <Icon name="chevron" class="size-6 text-white group-hover:text-dark" />
        </span>
      </a>
    </div>
    <div class="sm:-8 bg-white p-6 md:p-10 lg:max-w-[524px]">
      <h2 class="mb-4 text-xl font-semibold text-dark sm:mb-7 sm:text-3xl lg:text-2xl">
        Доставка санкционных грузов через <span class="size-6"><Image class="inline size-8" src={import('../assets/turkey.png')} quality={100} alt="turkeyF" /></span> Турцию и
        <span class="size-6"><Image class="inline size-8" src={import('../assets/kir.png')} quality={100} alt="turkey" /></span>
        Киргизию
      </h2>
      <ul class="*:mb-2 *:flex *:items-baseline *:gap-3 *:font-semibold">
        {
          hero.data.tags.map((tag) => (
            <li>
              <Icon name="check" class="shrink-0" /> {tag}
            </li>
          ))
        }
      </ul>
    </div>
  </div>
  <div class="container relative z-10 flex flex-col gap-5 overflow-hidden pb-[70px] md:flex-row md:gap-0">
    <div class="flex w-full items-start gap-4 rounded-2xl bg-[#E53737] p-5 sm:items-center sm:gap-5 md:flex-col md:rounded-l-2xl md:rounded-r-none md:px-6 md:py-6 xl:flex-row">
      <Icon name="package" class="size-6 shrink-0" />
      <span class="text-sm font-bold leading-5 text-white sm:text-base">
        {hero.data.blocks[0]}
      </span>
    </div>
    <div class="flex w-full items-start gap-4 rounded-2xl bg-[#082885] p-5 sm:items-center sm:gap-5 md:flex-col md:rounded-none md:px-6 md:py-6 xl:flex-row">
      <Icon name="navigation" class="size-6 shrink-0" />
      <span class="text-sm font-bold leading-5 text-white sm:text-base">{hero.data.blocks[1]} </span>
    </div>
    <div class="flex w-full items-start gap-4 rounded-2xl bg-white p-5 sm:items-center sm:gap-5 md:flex-col md:rounded-none md:p-6 xl:flex-row">
      <Icon name="timer" class="size-6 shrink-0" />
      <span class="max-w-[200px] text-sm font-bold leading-5 text-dark sm:text-base">{hero.data.blocks[2]} </span>
    </div>
    <div class="flex w-full items-start gap-4 rounded-2xl bg-[#F7F7F7] p-5 sm:items-center sm:gap-5 md:flex-col md:rounded-l-none md:rounded-r-2xl md:p-4 xl:flex-row">
      <Icon name="wallet" class="size-6 shrink-0" />
      <span class="text-sm font-bold leading-5 text-dark sm:text-base">{hero.data.blocks[3]} </span>
    </div>
  </div>
</div>

<style lang="scss">
  .hero {
    position: relative;
    background-size: 100% 100%;
    background-repeat: no-repeat;
    transition: background-image 2s ease-in-out;
    @media screen and (max-width: 640px) {
      background-size: cover;
      transition: background-image 1.5s;
    }
  }

  .hero::after {
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    z-index: 2;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.1);
  }
</style>

<script>
  const images = ['url("/hero.png")', 'url("/hero-2.png")'];
  let currentIndex = 0;
  function changeBackground() {
    const backgroundElement = document.querySelector('.hero') as HTMLElement;
    backgroundElement.style.backgroundImage = `url("/hero/heroImages/${currentIndex}.png")`;
    currentIndex = (currentIndex + 1) % images.length;
  }
  changeBackground();
  setInterval(changeBackground, 5000);
</script>
